Backend Requirements:
    8 total Web-Services:
        #1 - Users
        #2 - Companies
        #3 - Company Jobs
        #4 - All jobs
        #5 - Apply
        #6 - Search

    4 web services that use custom headers:
        #1 - Users (checks "sender-uid" header)
        #2 - Companies (checks "sender-uid" header)
        #3 - Applying for jobs (checks "sender-uid" header)
        #4 - 

    2 web services that use GET, POST, PUT, DELETE:
        #1 - Users
            GET: Gets all users or a specific user
            POST: Creates a user
            PUT: Updates a user
            DELETE: Deletes a user

        #2 - Companies
            GET: Get all companies or a specific company
            POST: Create a new company
            PUT: Updates a company
            DELETE: Deletes a company


    2 web services with second-order composition
        #1 - Companies
        #2 - 

    2 External Web Service Providers:
        #1 - Firebase for Authentication
        #2 - MongoDB
        #3 - JSearch




Skill Seeker Gmail Account:
    e: skillseeker.noreply@gmail.com
    p: skillseeker12

RapidAPI:
    u: SkillSeeker1
    e: skillseeker.noreply@gmail.com
    p: SkillSeeker12.


Web Service #1 - Users:
    http://localhost:2000/users/
        GET: Gets all users
        POST: Create a new user

    http://localhost:2000/users/{uid}
        GET: Get a specific user
        PUT: Update a specific user
        DELETE: Delete a specific user


Web Service #2 - Companies:
    http://localhost:2000/companies/
        GET: Get all companies
        POST: Create a new company

    http://localhost:2000/companies/{uid}
        GET: Get a specific company
        PUT: Update a specific company

Web Service #3 - Company Jobs
    http://localhost:2000/companies/{uid}/jobs
        GET: Get all jobs from a specific company
        POST: Create a new job under a specific company

    http://localhost:2000/companies/{uid}/jobs/{jobid}
        GET: Get a specific job from a specific company
        PUT: Update a specific job from a specific company
    

Web Service #4 - Job Postings:
    http://localhost:2000/jobs/
        GET: Get all jobs from all companies

    http://localhost:2000/jobs/{uid}
        GET: Get a specific job

    http://localhost:2000/jobs/external
        GET: Get external jobs 


Web Service #5 - Applying
    http://localhost:2000/apply/{uid}
        POST: Apply to a specific job


Web Service #6 - Search
    http://localhost:2000/search/{users/companies/jobs}/{name}
        GET: Search for things by name



Authetication Process:
    1. Call FirebaseAuthHandler.signInUser and provide necessary arguments
    2. Acquire UID and store it somewhere
    3. When doing calls to backend, pass the uid through in body as "senderUID"

    


